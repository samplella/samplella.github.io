{"id":"kgD2","dependencies":[{"name":"/Users/mariacasasahumada/Documents/Algolia-TAM/samplella.github.io/package.json","includedInParent":true,"mtime":1636499219182},{"name":"/Users/mariacasasahumada/Documents/Algolia-TAM/samplella.github.io/node_modules/algoliasearch/package.json","includedInParent":true,"mtime":1636217283394},{"name":"foreach","loc":{"line":1,"column":22},"parent":"/Users/mariacasasahumada/Documents/Algolia-TAM/samplella.github.io/node_modules/algoliasearch/src/merge.js","resolved":"/Users/mariacasasahumada/Documents/Algolia-TAM/samplella.github.io/node_modules/foreach/index.js"}],"generated":{"js":"var r=require(\"foreach\");module.exports=function o(e){var t=Array.prototype.slice.call(arguments);return r(t,function(r){for(var t in r)r.hasOwnProperty(t)&&(\"object\"==typeof e[t]&&\"object\"==typeof r[t]?e[t]=o({},e[t],r[t]):void 0!==r[t]&&(e[t]=r[t]))}),e};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algoliasearch/src/merge.js","name":"foreach","original":{"line":1,"column":4},"generated":{"line":1,"column":4}},{"source":"node_modules/algoliasearch/src/merge.js","name":"require","original":{"line":1,"column":14},"generated":{"line":1,"column":6}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":1,"column":22},"generated":{"line":1,"column":14}},{"source":"node_modules/algoliasearch/src/merge.js","name":"module","original":{"line":3,"column":0},"generated":{"line":1,"column":25}},{"source":"node_modules/algoliasearch/src/merge.js","name":"exports","original":{"line":3,"column":7},"generated":{"line":1,"column":32}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":3,"column":17},"generated":{"line":1,"column":40}},{"source":"node_modules/algoliasearch/src/merge.js","name":"merge","original":{"line":3,"column":26},"generated":{"line":1,"column":49}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":3,"column":32},"generated":{"line":1,"column":51}},{"source":"node_modules/algoliasearch/src/merge.js","name":"sources","original":{"line":4,"column":6},"generated":{"line":1,"column":54}},{"source":"node_modules/algoliasearch/src/merge.js","name":"sources","original":{"line":4,"column":6},"generated":{"line":1,"column":58}},{"source":"node_modules/algoliasearch/src/merge.js","name":"Array","original":{"line":4,"column":16},"generated":{"line":1,"column":60}},{"source":"node_modules/algoliasearch/src/merge.js","name":"prototype","original":{"line":4,"column":22},"generated":{"line":1,"column":66}},{"source":"node_modules/algoliasearch/src/merge.js","name":"slice","original":{"line":4,"column":32},"generated":{"line":1,"column":76}},{"source":"node_modules/algoliasearch/src/merge.js","name":"call","original":{"line":4,"column":38},"generated":{"line":1,"column":82}},{"source":"node_modules/algoliasearch/src/merge.js","name":"arguments","original":{"line":4,"column":43},"generated":{"line":1,"column":87}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":18,"column":9},"generated":{"line":1,"column":98}},{"source":"node_modules/algoliasearch/src/merge.js","name":"foreach","original":{"line":6,"column":2},"generated":{"line":1,"column":105}},{"source":"node_modules/algoliasearch/src/merge.js","name":"sources","original":{"line":6,"column":10},"generated":{"line":1,"column":107}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":6,"column":19},"generated":{"line":1,"column":109}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":6,"column":28},"generated":{"line":1,"column":118}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":7,"column":9},"generated":{"line":1,"column":121}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":7,"column":9},"generated":{"line":1,"column":125}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":7,"column":13},"generated":{"line":1,"column":129}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":7,"column":24},"generated":{"line":1,"column":134}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":8,"column":10},"generated":{"line":1,"column":136}},{"source":"node_modules/algoliasearch/src/merge.js","name":"hasOwnProperty","original":{"line":8,"column":17},"generated":{"line":1,"column":138}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":8,"column":32},"generated":{"line":1,"column":153}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":9,"column":44},"generated":{"line":1,"column":158}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":9,"column":19},"generated":{"line":1,"column":175}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":9,"column":31},"generated":{"line":1,"column":177}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":9,"column":83},"generated":{"line":1,"column":181}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":9,"column":63},"generated":{"line":1,"column":198}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":9,"column":70},"generated":{"line":1,"column":200}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":10,"column":10},"generated":{"line":1,"column":203}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":10,"column":22},"generated":{"line":1,"column":205}},{"source":"node_modules/algoliasearch/src/merge.js","name":"merge","original":{"line":10,"column":33},"generated":{"line":1,"column":208}},{"source":"node_modules/algoliasearch/src/merge.js","original":{"line":10,"column":39},"generated":{"line":1,"column":210}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":10,"column":43},"generated":{"line":1,"column":213}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":10,"column":55},"generated":{"line":1,"column":215}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":10,"column":65},"generated":{"line":1,"column":218}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":10,"column":72},"generated":{"line":1,"column":220}},{"source":"node_modules/algoliasearch/src/merge.js","name":"undefined","original":{"line":11,"column":39},"generated":{"line":1,"column":229}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":11,"column":19},"generated":{"line":1,"column":233}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":11,"column":26},"generated":{"line":1,"column":235}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":12,"column":10},"generated":{"line":1,"column":240}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":12,"column":22},"generated":{"line":1,"column":242}},{"source":"node_modules/algoliasearch/src/merge.js","name":"source","original":{"line":12,"column":33},"generated":{"line":1,"column":245}},{"source":"node_modules/algoliasearch/src/merge.js","name":"keyName","original":{"line":12,"column":40},"generated":{"line":1,"column":247}},{"source":"node_modules/algoliasearch/src/merge.js","name":"destination","original":{"line":18,"column":9},"generated":{"line":1,"column":254}}],"sources":{"node_modules/algoliasearch/src/merge.js":"var foreach = require('foreach');\n\nmodule.exports = function merge(destination/* , sources */) {\n  var sources = Array.prototype.slice.call(arguments);\n\n  foreach(sources, function(source) {\n    for (var keyName in source) {\n      if (source.hasOwnProperty(keyName)) {\n        if (typeof destination[keyName] === 'object' && typeof source[keyName] === 'object') {\n          destination[keyName] = merge({}, destination[keyName], source[keyName]);\n        } else if (source[keyName] !== undefined) {\n          destination[keyName] = source[keyName];\n        }\n      }\n    }\n  });\n\n  return destination;\n};\n"},"lineCount":null}},"error":null,"hash":"4be31d1dac553f98e98d60e5e9502c69","cacheData":{"env":{}}}