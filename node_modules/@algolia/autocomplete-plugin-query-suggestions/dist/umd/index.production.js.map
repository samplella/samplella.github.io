{"version":3,"file":"index.production.js","sources":["../../../autocomplete-shared/dist/esm/version.js","../../../autocomplete-shared/dist/esm/userAgents.js","../../../autocomplete-preset-algolia/dist/esm/requester/createRequester.js","../../../autocomplete-preset-algolia/dist/esm/search/fetchAlgoliaResults.js","../../../autocomplete-js/dist/esm/userAgents.js","../../../autocomplete-js/dist/esm/requesters/createAlgoliaRequester.js","../../../autocomplete-preset-algolia/dist/esm/constants/index.js","../../../autocomplete-js/dist/esm/requesters/getAlgoliaResults.js","../../src/getTemplates.tsx","../../src/createQuerySuggestionsPlugin.ts","../../../autocomplete-shared/dist/esm/getAttributeValueByPath.js"],"sourcesContent":["export var version = '1.5.0';","import { version } from './version';\nexport var userAgents = [{\n  segment: 'autocomplete-core',\n  version: version\n}];","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport function createRequester(fetcher) {\n  function execute(fetcherParams) {\n    return fetcher({\n      searchClient: fetcherParams.searchClient,\n      queries: fetcherParams.requests.map(function (x) {\n        return x.query;\n      })\n    }).then(function (responses) {\n      return responses.map(function (response, index) {\n        var _fetcherParams$reques = fetcherParams.requests[index],\n            sourceId = _fetcherParams$reques.sourceId,\n            transformResponse = _fetcherParams$reques.transformResponse;\n        return {\n          items: response,\n          sourceId: sourceId,\n          transformResponse: transformResponse\n        };\n      });\n    });\n  }\n\n  return function createSpecifiedRequester(requesterParams) {\n    return function requester(requestParams) {\n      return _objectSpread(_objectSpread({\n        execute: execute\n      }, requesterParams), requestParams);\n    };\n  };\n}","var _excluded = [\"params\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { userAgents as coreUserAgents } from '@algolia/autocomplete-shared';\nimport { HIGHLIGHT_PRE_TAG, HIGHLIGHT_POST_TAG } from '../constants';\nexport function fetchAlgoliaResults(_ref) {\n  var searchClient = _ref.searchClient,\n      queries = _ref.queries,\n      _ref$userAgents = _ref.userAgents,\n      userAgents = _ref$userAgents === void 0 ? [] : _ref$userAgents;\n\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    var algoliaAgents = [].concat(_toConsumableArray(coreUserAgents), _toConsumableArray(userAgents));\n    algoliaAgents.forEach(function (_ref2) {\n      var segment = _ref2.segment,\n          version = _ref2.version;\n      searchClient.addAlgoliaAgent(segment, version);\n    });\n  }\n\n  return searchClient.search(queries.map(function (searchParameters) {\n    var params = searchParameters.params,\n        headers = _objectWithoutProperties(searchParameters, _excluded);\n\n    return _objectSpread(_objectSpread({}, headers), {}, {\n      params: _objectSpread({\n        hitsPerPage: 5,\n        highlightPreTag: HIGHLIGHT_PRE_TAG,\n        highlightPostTag: HIGHLIGHT_POST_TAG\n      }, params)\n    });\n  })).then(function (response) {\n    return response.results;\n  });\n}","import { version } from '@algolia/autocomplete-shared';\nexport var userAgents = [{\n  segment: 'autocomplete-js',\n  version: version\n}];","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createRequester, fetchAlgoliaResults } from '@algolia/autocomplete-preset-algolia';\nimport { userAgents } from '../userAgents';\nexport var createAlgoliaRequester = createRequester(function (params) {\n  return fetchAlgoliaResults(_objectSpread(_objectSpread({}, params), {}, {\n    userAgents: userAgents\n  }));\n});","export var HIGHLIGHT_PRE_TAG = '__aa-highlight__';\nexport var HIGHLIGHT_POST_TAG = '__/aa-highlight__';","import { createAlgoliaRequester } from './createAlgoliaRequester';\n/**\n * Retrieves Algolia results from multiple indices.\n */\n\nexport var getAlgoliaResults = createAlgoliaRequester({\n  transformResponse: function transformResponse(response) {\n    return response.hits;\n  }\n});","/** @jsx createElement */\nimport { SourceTemplates } from '@algolia/autocomplete-js';\n\nimport { QuerySuggestionsHit } from './types';\n\nexport type GetTemplatesParams<TItem extends QuerySuggestionsHit> = {\n  onTapAhead(item: TItem): void;\n};\n\nexport function getTemplates<TItem extends QuerySuggestionsHit>({\n  onTapAhead,\n}: GetTemplatesParams<TItem>): SourceTemplates<TItem> {\n  return {\n    item({ item, createElement, components }) {\n      if (item.__autocomplete_qsCategory) {\n        return (\n          <div className=\"aa-ItemWrapper\">\n            <div className=\"aa-ItemContent aa-ItemContent--indented\">\n              <div className=\"aa-ItemContentSubtitle aa-ItemContentSubtitle--standalone\">\n                <span className=\"aa-ItemContentSubtitleIcon\" />\n                <span>\n                  in{' '}\n                  <span className=\"aa-ItemContentSubtitleCategory\">\n                    {item.__autocomplete_qsCategory}\n                  </span>\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"aa-ItemWrapper\">\n          <div className=\"aa-ItemContent\">\n            <div className=\"aa-ItemIcon aa-ItemIcon--noBorder\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M16.041 15.856c-0.034 0.026-0.067 0.055-0.099 0.087s-0.060 0.064-0.087 0.099c-1.258 1.213-2.969 1.958-4.855 1.958-1.933 0-3.682-0.782-4.95-2.050s-2.050-3.017-2.050-4.95 0.782-3.682 2.050-4.95 3.017-2.050 4.95-2.050 3.682 0.782 4.95 2.050 2.050 3.017 2.050 4.95c0 1.886-0.745 3.597-1.959 4.856zM21.707 20.293l-3.675-3.675c1.231-1.54 1.968-3.493 1.968-5.618 0-2.485-1.008-4.736-2.636-6.364s-3.879-2.636-6.364-2.636-4.736 1.008-6.364 2.636-2.636 3.879-2.636 6.364 1.008 4.736 2.636 6.364 3.879 2.636 6.364 2.636c2.125 0 4.078-0.737 5.618-1.968l3.675 3.675c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414z\" />\n              </svg>\n            </div>\n            <div className=\"aa-ItemContentBody\">\n              <div className=\"aa-ItemContentTitle\">\n                <components.ReverseHighlight hit={item} attribute=\"query\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"aa-ItemActions\">\n            <button\n              className=\"aa-ItemActionButton\"\n              title={`Fill query with \"${item.query}\"`}\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onTapAhead(item);\n              }}\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M8 17v-7.586l8.293 8.293c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414l-8.293-8.293h7.586c0.552 0 1-0.448 1-1s-0.448-1-1-1h-10c-0.552 0-1 0.448-1 1v10c0 0.552 0.448 1 1 1s1-0.448 1-1z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      );\n    },\n  };\n}\n","import {\n  AutocompleteState,\n  AutocompleteSource,\n  AutocompletePlugin,\n  getAlgoliaResults,\n} from '@algolia/autocomplete-js';\nimport { getAttributeValueByPath } from '@algolia/autocomplete-shared';\nimport { SearchOptions } from '@algolia/client-search';\nimport { SearchClient } from 'algoliasearch/lite';\n\nimport { getTemplates } from './getTemplates';\nimport { AutocompleteQuerySuggestionsHit, QuerySuggestionsHit } from './types';\n\nexport type CreateQuerySuggestionsPluginParams<\n  TItem extends QuerySuggestionsHit\n> = {\n  /**\n   * The initialized Algolia search client.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-searchclient\n   */\n  searchClient: SearchClient;\n  /**\n   * The index name.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-indexname\n   */\n  indexName: string;\n  /**\n   * A function returning [Algolia search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/).\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-getsearchparams\n   */\n  getSearchParams?(params: { state: AutocompleteState<TItem> }): SearchOptions;\n  /**\n   * A function to transform the provided source.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-transformsource\n   */\n  transformSource?(params: {\n    source: AutocompleteSource<TItem>;\n    state: AutocompleteState<TItem>;\n    onTapAhead(item: TItem): void;\n  }): AutocompleteSource<TItem>;\n  /**\n   * The attribute or attribute path to display categories for.\n   *\n   * @example [\"instant_search\", \"facets\", \"exact_matches\", \"categories\"]\n   * @example [\"instant_search\", \"facets\", \"exact_matches\", \"hierarchicalCategories.lvl0\"]\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-categoryattribute\n   */\n  categoryAttribute?: string | string[];\n  /**\n   * How many items to display categories for.\n   *\n   * @default 1\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-itemswithcategories\n   */\n  itemsWithCategories?: number;\n  /**\n   * The number of categories to display per item.\n   *\n   * @default 1\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-query-suggestions/createQuerySuggestionsPlugin/#param-categoriesperitem\n   */\n  categoriesPerItem?: number;\n};\n\nexport function createQuerySuggestionsPlugin<\n  TItem extends AutocompleteQuerySuggestionsHit\n>(\n  options: CreateQuerySuggestionsPluginParams<TItem>\n): AutocompletePlugin<TItem, undefined> {\n  const {\n    searchClient,\n    indexName,\n    getSearchParams,\n    transformSource,\n    categoryAttribute,\n    itemsWithCategories,\n    categoriesPerItem,\n  } = getOptions(options);\n\n  return {\n    name: 'aa.querySuggestionsPlugin',\n    getSources({ query, setQuery, refresh, state }) {\n      function onTapAhead(item: TItem) {\n        setQuery(`${item.query} `);\n        refresh();\n      }\n\n      return [\n        transformSource({\n          source: {\n            sourceId: 'querySuggestionsPlugin',\n            getItemInputValue({ item }) {\n              return item.query;\n            },\n            getItems() {\n              return getAlgoliaResults({\n                searchClient,\n                queries: [\n                  {\n                    indexName,\n                    query,\n                    params: getSearchParams({\n                      state: state as AutocompleteState<TItem>,\n                    }),\n                  },\n                ],\n                transformResponse({ hits }) {\n                  const querySuggestionsHits: Array<\n                    AutocompleteQuerySuggestionsHit<typeof indexName>\n                  > = hits[0];\n\n                  if (!query || !categoryAttribute) {\n                    return querySuggestionsHits as any;\n                  }\n\n                  return querySuggestionsHits.reduce<\n                    Array<AutocompleteQuerySuggestionsHit<typeof indexName>>\n                  >((acc, current, i) => {\n                    const items: Array<\n                      AutocompleteQuerySuggestionsHit<typeof indexName>\n                    > = [current];\n\n                    if (i <= itemsWithCategories - 1) {\n                      const categories = getAttributeValueByPath(\n                        current,\n                        Array.isArray(categoryAttribute)\n                          ? categoryAttribute\n                          : [categoryAttribute]\n                      )\n                        .map((x) => x.value)\n                        .slice(0, categoriesPerItem);\n\n                      for (const category of categories) {\n                        items.push({\n                          __autocomplete_qsCategory: category,\n                          ...current,\n                        } as any);\n                      }\n                    }\n\n                    acc.push(...items);\n\n                    return acc;\n                  }, []);\n                },\n              });\n            },\n            templates: getTemplates({ onTapAhead }),\n          },\n          onTapAhead,\n          state: state as AutocompleteState<TItem>,\n        }),\n      ];\n    },\n    __autocomplete_pluginOptions: options,\n  };\n}\n\nfunction getOptions<TItem extends AutocompleteQuerySuggestionsHit>(\n  options: CreateQuerySuggestionsPluginParams<TItem>\n) {\n  return {\n    getSearchParams: () => ({}),\n    transformSource: ({ source }) => source,\n    itemsWithCategories: 1,\n    categoriesPerItem: 1,\n    ...options,\n  };\n}\n","export function getAttributeValueByPath(record, path) {\n  return path.reduce(function (current, key) {\n    return current && current[key];\n  }, record);\n}"],"names":["version","userAgents","segment","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_excluded","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","toString","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","createAlgoliaRequester","fetcher","execute","fetcherParams","searchClient","queries","requests","map","x","query","then","responses","response","index","_fetcherParams$reques","items","sourceId","transformResponse","requesterParams","requestParams","createRequester","params","_ref","_ref$userAgents","addAlgoliaAgent","concat","coreUserAgents","_ref2","search","searchParameters","hitsPerPage","highlightPreTag","highlightPostTag","results","fetchAlgoliaResults","getAlgoliaResults","hits","getTemplates","onTapAhead","item","createElement","components","__autocomplete_qsCategory","className","viewBox","fill","d","ReverseHighlight","hit","attribute","title","onClick","event","preventDefault","stopPropagation","options","getSearchParams","transformSource","itemsWithCategories","categoriesPerItem","getOptions","indexName","categoryAttribute","getSources","setQuery","refresh","state","getItemInputValue","getItems","querySuggestionsHits","reduce","acc","current","record","path","categories","category","templates","__autocomplete_pluginOptions"],"mappings":"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"}